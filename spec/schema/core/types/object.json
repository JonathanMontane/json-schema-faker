[
  {
    "description": "object generator",
    "tests": [
      {
        "description": "should skip some non-required properties",
        "schema": {
          "type": "object",
          "properties": {
            "one": { "type": "string" },
            "two": { "type": "string" },
            "three": { "type": "string" }
          },
          "required": ["one", "three"]
        },
        "valid": true
      },
      {
        "description": "should handle patternProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
            "a\\w{4,12}": { "type": "string" },
            "xy-[a-f\\d]{4}-n[pqrz]": { "type": "string" }
          }
        },
        "valid": true
      },
      {
        "description": "should handle minProperties",
        "schema": {
          "type": "object",
          "properties": {
            "x": { "type": "string" },
            "y": { "type": "string" }
          },
          "required": ["x", "y"],
          "minProperties": 2
        },
        "valid": true
      },
      {
        "description": "should handle maxProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
            "a+": { "type": "string" },
            "b+": { "type": "string" },
            "c+": { "type": "string" }
          },
          "minProperties": 1,
          "maxProperties": 2
        },
        "valid": true
      },
      {
        "description": "should handle additionalProperties (exact number)",
        "schema": {
          "type": "object",
          "properties": {
            "example": { "type": "string" }
          },
          "minProperties": 5,
          "maxProperties": 5,
          "additionalProperties": { "type": "string" }
        },
        "valid": true
      },
      {
        "description": "should handle additionalProperties (random number)",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30,
          "additionalProperties": { "type": "string" }
        },
        "valid": true
      },
      {
        "description": "should handle absence of property definitions",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30
        },
        "valid": true
      },
      {
        "description": "should handle conflicting pattern definitions",
        "schema": {
          "type": "object",
          "patternProperties": {
              "^hyb": {
                  "type": "integer"
              },
              "rid$": {
                  "type": "string"
              }
          },
          "required": [ "hybrid" ]
        },
        "valid": false
      },
      {
        "description": "should handle required properties with missing additionalProperties field",
        "schema": {
          "type": "object",
          "additionalProperties": {
              "type": "string"
          },
          "required": [ "hybrid", "other" ]
        },
        "valid": true
      },
      {
        "description": "should handle superposition of patternProperties and additionalProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
              "^hyb": {
                  "type": "integer"
              },
              "rid$": {
                  "maximum": 3
              }
          },
          "additionalProperties": {
              "type": "string"
          },
          "required": [ "hybrid", "other" ]
        },
        "valid": true
      },
      {
        "description": "should validate properties using all options",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30,
          "additionalProperties": false
        },
        "throws": "missing properties for .+? in \\/"
      },
      {
        "description": "should handle inferred type (when possible)",
        "schema": {
          "properties": {
            "name": { "type": "string" }
          }
        },
        "type": "object"
      }
    ]
  }
]
